name: Deploy

on:
  release:
    types: [released]
    paths:
      - "**.go"
      - go.mod
      - go.sum
      - .github/workflows/deploy.yml
      - containers/deploy.dockerfile

  workflow_call:
    inputs:
      TAG:
        type: string
        required: false

    secrets:
      GCP_CREDENTIALS:
        description: "Service Account Key JSON"
        required: true
      SSH_KEY:
        description: "SSH Key to download private dependencies"
        required: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      TAG: ${{ github.event.inputs.TAG || github.event.release.tag_name || 'latest' }}
      GCP_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS || secrets.GCP_CREDENTIALS_PROD }}
      SSH_KEY: ${{ secrets.SSH_KEY }}
    steps:
      - uses: actions/checkout@v4
      - name: GCP Auth
        id: gcp-auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: "${{ env.GCP_CREDENTIALS }}"
          token_format: "access_token"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker Auth
        id: docker-auth
        uses: docker/login-action@v3
        with:
          username: "oauth2accesstoken"
          password: "${{ steps.gcp-auth.outputs.access_token }}"
          registry: "gcr.io"

      - name: Set Image
        run: echo "IMAGE=gcr.io/${{ steps.gcp-auth.outputs.project_id }}/${{ github.event.repository.name }}" >> $GITHUB_ENV

      - name: Go Build Cache for Docker
        uses: actions/cache@v4
        with:
          path: go-build-cache
          key: ${{ runner.os }}-go-build-cache-${{ hashFiles('**/go.sum') }}

      - name: inject go-build-cache into docker
        uses: reproducible-containers/buildkit-cache-dance@v2
        with:
          cache-source: go-build-cache

      - name: Set up SSH-Agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ env.SSH_KEY }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          ssh: default
          tags: |
            ${{ env.IMAGE }}:${{ env.TAG }},
            ${{ env.IMAGE }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - id: cloud-run
        name: Deploy Cloud Run
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ github.event.repository.name }}
          image: ${{ env.IMAGE }}
          region: us-east1
          tag: ${{ env.TAG }}

      - name: Deploy URL
        run: echo ${{ steps.cloud-run.outputs.url }}
